// <auto-generated />
using System;
using CtaCargo.CctImportacao.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CtaCargo.CctImportacao.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230528003728_Alteracoes008")]
    partial class Alteracoes008
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.AgenteDeCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("CertificadoId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Numero", "DataExclusao")
                        .IsUnique();

                    b.ToTable("AgenteDeCarga");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CertificadoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeDono")
                        .HasColumnType("varchar(120)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "SerialNumber", "DataExclusao")
                        .IsUnique();

                    b.ToTable("CertificadoDigital");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CiaAerea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<int?>("CertificadoId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Numero", "DataExclusao")
                        .IsUnique();

                    b.ToTable("CiaAerea");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("CnpjId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Postal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Subdivisao")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("CnpjId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Nome", "Endereco", "Cidade", "PaisCodigo", "Postal", "Subdivisao")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CnpjCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Cnpj")
                        .IsUnique();

                    b.ToTable("CnpjCliente");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Configura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiaAereaId")
                        .HasColumnType("int");

                    b.Property<string>("ConfiguracaoNome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ConfiguracaoTipo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ConfiguracaoValor")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiaAereaId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Configura");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("RazaoSocial");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.ErroMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Erro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasterId", "DataExclusao");

                    b.ToTable("ErroMaster");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("TipoFatura")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "TipoFatura", "DataExclusao");

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AeroportoDestinoCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("AeroportoDestinoId")
                        .HasColumnType("int");

                    b.Property<string>("AeroportoOrigemCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("AeroportoOrigemId")
                        .HasColumnType("int");

                    b.Property<string>("AgenteDeCargaCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("AgenteDeCargaEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("AgenteDeCargaId")
                        .HasColumnType("int");

                    b.Property<string>("AgenteDeCargaNome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("AgenteDeCargaPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("AgenteDeCargaPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("AgenteDeCargaSubdivisao")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("CodigoErroAssociacaoRFB")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CodigoErroRFB")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("CodigoRecintoAduaneiro")
                        .HasColumnType("int");

                    b.Property<string>("ConsignatarioCNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("ConsignatarioCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioNome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ConsignatarioPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ConsignatarioSubdivisao")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataChecagemAssociacaoRFB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataChecagemRFB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmissaoXML")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProcessadoRFB")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataProcessamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProtocoloAssociacaoRFB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataProtocoloRFB")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoErroAssociacaoRFB")
                        .HasColumnType("text");

                    b.Property<string>("DescricaoErroRFB")
                        .HasColumnType("text");

                    b.Property<string>("DescricaoMercadoria")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("ExpedidorCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorNome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ExpedidorPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ExpedidorSubdivisao")
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("IndicadorMadeiraMacica")
                        .HasColumnType("bit");

                    b.Property<string>("MasterNumeroXML")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("MoedaAplicadaOrigem")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NCMLista")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NumeroAgenteDeCarga")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("OutrasInstrucoesManuseio")
                        .HasColumnType("varchar(150)");

                    b.Property<double>("PesoTotalBruto")
                        .HasColumnType("float");

                    b.Property<string>("PesoTotalBrutoUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("PesoTotalBrutoUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<double>("PesoTotalBrutoXML")
                        .HasColumnType("float");

                    b.Property<string>("ProtocoloAssociacaoRFB")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProtocoloRFB")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RUC")
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<bool>("ReenviarAssociacao")
                        .HasColumnType("bit");

                    b.Property<string>("SignatarioAssinante")
                        .HasColumnType("varchar(35)");

                    b.Property<DateTime?>("SignatarioAssinaturaDataHora")
                        .HasColumnType("datetime");

                    b.Property<string>("SignatarioAssinaturaLocal")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("SignatarioNome")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("SituacaoAssociacaoRFBId")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoRFBId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TotalVolumes")
                        .HasColumnType("int");

                    b.Property<int>("TotalVolumesXML")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorFreteFC")
                        .HasColumnType("MONEY");

                    b.Property<string>("ValorFreteFCUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ValorFreteFCUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("ValorFreteFCXML")
                        .HasColumnType("MONEY");

                    b.Property<decimal>("ValorFretePP")
                        .HasColumnType("MONEY");

                    b.Property<string>("ValorFretePPUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ValorFretePPUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("ValorFretePPXML")
                        .HasColumnType("MONEY");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<string>("VolumeUN")
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("AeroportoDestinoId");

                    b.HasIndex("AeroportoOrigemId");

                    b.HasIndex("AgenteDeCargaId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("MasterNumeroXML", "Numero", "DataExclusao")
                        .IsUnique();

                    b.ToTable("House");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AeroportoDestinoCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("AeroportoDestinoId")
                        .HasColumnType("int");

                    b.Property<string>("AeroportoOrigemCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("AeroportoOrigemId")
                        .HasColumnType("int");

                    b.Property<string>("AutenticacaoSignatariaLocal")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("AutenticacaoSignatariaNome")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("AutenticacaoSignatarioData")
                        .HasColumnType("datetime");

                    b.Property<int>("CiaAereaId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoConteudo")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CodigoErroRFB")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("CodigoManuseioProdutoAlgandega")
                        .HasColumnType("varchar(2)");

                    b.Property<int>("CodigoRecintoAduaneiro")
                        .HasColumnType("int");

                    b.Property<string>("ConsignatarioCNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<string>("ConsignatarioCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioNome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ConsignatarioPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ConsignatarioPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ConsignatarioSubdivisao")
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataChecagemRFB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmissaoXML")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProcessadoRFB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataProtocoloRFB")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoErroRFB")
                        .HasColumnType("varchar(550)");

                    b.Property<string>("DescricaoMercadoria")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmissorCargoAgenteLocalizacao")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("EmissorCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("EmissorEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("EmissorNome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("EmissorPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("EmissorPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("ExpedidorCidade")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorEndereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorNome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ExpedidorPaisCodigo")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ExpedidorPostal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ExpedidorSubdivisao")
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("IndicadorMadeiraMacica")
                        .HasColumnType("bit");

                    b.Property<bool>("IndicadorNaoDesunitizacao")
                        .HasColumnType("bit");

                    b.Property<bool>("MeiaEntradaXML")
                        .HasColumnType("bit");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("MoedaAplicadaOrigem")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NCMLista")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NaturezaCarga")
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("NaturezaCargaId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NumeroDocumentoRFB")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OutrasInstrucoesManuseio")
                        .HasColumnType("varchar(150)");

                    b.Property<double>("PesoTotalBruto")
                        .HasColumnType("float");

                    b.Property<string>("PesoTotalBrutoUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("PesoTotalBrutoUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<double>("PesoTotalBrutoXML")
                        .HasColumnType("float");

                    b.Property<string>("ProdutoSituacaoAlfandega")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ProtocoloRFB")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RUC")
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<int>("SituacaoRFBId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TotalParcial")
                        .HasColumnType("varchar(1)");

                    b.Property<int>("TotalPecas")
                        .HasColumnType("int");

                    b.Property<int>("TotalPecasXML")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorFOB")
                        .HasColumnType("MONEY");

                    b.Property<string>("ValorFOBUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ValorFOBUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("ValorFOBXML")
                        .HasColumnType("MONEY");

                    b.Property<decimal>("ValorFreteFC")
                        .HasColumnType("MONEY");

                    b.Property<string>("ValorFreteFCUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ValorFreteFCUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("ValorFreteFCXML")
                        .HasColumnType("MONEY");

                    b.Property<decimal>("ValorFretePP")
                        .HasColumnType("MONEY");

                    b.Property<string>("ValorFretePPUN")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ValorFretePPUNXML")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("ValorFretePPXML")
                        .HasColumnType("MONEY");

                    b.Property<int?>("VooId")
                        .HasColumnType("int");

                    b.Property<string>("VooNumeroXML")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AeroportoDestinoId");

                    b.HasIndex("AeroportoOrigemId");

                    b.HasIndex("CiaAereaId");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("NaturezaCargaId");

                    b.HasIndex("VooId", "Numero", "DataExclusao")
                        .IsUnique();

                    b.ToTable("Master");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.MasterInstrucaoManuseio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("MasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("MasterId");

                    b.ToTable("MasterInstrucaoManuseio");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.NCM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1200)");

                    b.Property<string>("DescricaoConcatenada")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Descricao");

                    b.ToTable("NCMs");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.NaturezaCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Codigo", "DataExclusao")
                        .IsUnique();

                    b.ToTable("NaturezaCarga");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.PortoIata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SiglaPais")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("EmpresaId", "Codigo", "DataExclusao")
                        .IsUnique();

                    b.ToTable("PortoIATA");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.ReceitaFederalTransacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoErroRFB")
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProcessadoRFB")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoErroRFB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("FaturaId")
                        .HasColumnType("varchar(550)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("NumeroFatura")
                        .HasColumnType("int");

                    b.Property<string>("ProtocoloRFB")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SituacaoRFBId")
                        .HasColumnType("int");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Xml")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("NumeroFatura");

                    b.HasIndex("EmpresaId", "FaturaId");

                    b.ToTable("ReceitaFederalTransacao");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.UldMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("MasterNumero")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("MONEY");

                    b.Property<int?>("QuantidadePecas")
                        .HasColumnType("int");

                    b.Property<string>("TotalParcial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ULDCaracteristicaCodigo")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ULDId")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ULDIdPrimario")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ULDObs")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("VooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("VooId");

                    b.HasIndex("MasterId", "ULDCaracteristicaCodigo", "ULDId", "ULDIdPrimario", "DataExclusao")
                        .IsUnique();

                    b.ToTable("ULDMaster");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcessaCiasAereas")
                        .HasColumnType("bit");

                    b.Property<bool>("AcessaClientes")
                        .HasColumnType("bit");

                    b.Property<bool>("AcessaUsuarios")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteraCia")
                        .HasColumnType("bit");

                    b.Property<bool>("AlterarSenha")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<int?>("CertificadoDigitalId")
                        .HasColumnType("int");

                    b.Property<int?>("CertificadoId")
                        .HasColumnType("int");

                    b.Property<int?>("CiaAereaId")
                        .HasColumnType("int");

                    b.Property<string>("CiaAereaNome")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataReset")
                        .HasColumnType("datetime");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("UsuarioSistema")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CertificadoDigitalId");

                    b.HasIndex("EmpresaId", "EMail", "DataExclusao")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Voo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AeroportoDestinoCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("AeroportoOrigemCodigo")
                        .HasColumnType("varchar(3)");

                    b.Property<int>("CiaAereaId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoErroRFB")
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<int>("CriadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataChecagemRFB")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataEmissaoXML")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraChegadaEstimada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraChegadaReal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraSaidaEstimada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraSaidaReal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProtocoloRFB")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVoo")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoErroRFB")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPeloId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDateTimeUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("PortoIataDestinoId")
                        .HasColumnType("int");

                    b.Property<int?>("PortoIataOrigemId")
                        .HasColumnType("int");

                    b.Property<string>("ProtocoloRFB")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<int>("SituacaoRFBId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPacotes")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPecas")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPesoBruto")
                        .HasColumnType("float");

                    b.Property<string>("TotalPesoBrutoUnidade")
                        .HasColumnType("varchar(3)");

                    b.Property<double?>("TotalVolumeBruto")
                        .HasColumnType("float");

                    b.Property<string>("TotalVolumeBrutoUnidade")
                        .HasColumnType("varchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("CriadoPeloId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModificadoPeloId");

                    b.HasIndex("PortoIataDestinoId");

                    b.HasIndex("PortoIataOrigemId");

                    b.HasIndex("CiaAereaId", "DataVoo", "Numero", "DataExclusao")
                        .IsUnique();

                    b.ToTable("Voo");
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.AgenteDeCarga", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CertificadoDigital", "CertificadoDigital")
                        .WithMany()
                        .HasForeignKey("CertificadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CertificadoDigital", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CiaAerea", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CertificadoDigital", "CertificadoDigital")
                        .WithMany("CiasAerea")
                        .HasForeignKey("CertificadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CnpjCliente", "CnpjClienteInfo")
                        .WithMany()
                        .HasForeignKey("CnpjId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.CnpjCliente", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Configura", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CiaAerea", "CompanhiaAereaInfo")
                        .WithMany()
                        .HasForeignKey("CiaAereaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioInfo")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.ErroMaster", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Master", "MasterInfo")
                        .WithMany("ErrosMaster")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Fatura", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.House", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "AeroportoDestinoInfo")
                        .WithMany()
                        .HasForeignKey("AeroportoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "AeroportoOrigemInfo")
                        .WithMany()
                        .HasForeignKey("AeroportoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.AgenteDeCarga", "AgenteDeCargaInfo")
                        .WithMany()
                        .HasForeignKey("AgenteDeCargaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Master", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "AeroportoDestinoInfo")
                        .WithMany()
                        .HasForeignKey("AeroportoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "AeroportoOrigemInfo")
                        .WithMany()
                        .HasForeignKey("AeroportoOrigemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CiaAerea", "CiaAereaInfo")
                        .WithMany()
                        .HasForeignKey("CiaAereaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.NaturezaCarga", "NaturezaCargaInfo")
                        .WithMany()
                        .HasForeignKey("NaturezaCargaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Voo", "VooInfo")
                        .WithMany("Masters")
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.MasterInstrucaoManuseio", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Master", null)
                        .WithMany("InstrucoesManuseios")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.NaturezaCarga", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.PortoIata", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.ReceitaFederalTransacao", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Fatura", "FaturaInfo")
                        .WithMany()
                        .HasForeignKey("NumeroFatura")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.UldMaster", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Master", "MasterInfo")
                        .WithMany("ULDs")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Voo", "VooInfo")
                        .WithMany("ULDs")
                        .HasForeignKey("VooId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CertificadoDigital", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("CertificadoDigitalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("CtaCargo.CctImportacao.Domain.Entities.Voo", b =>
                {
                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.CiaAerea", "CompanhiaAereaInfo")
                        .WithMany()
                        .HasForeignKey("CiaAereaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioCriacaoInfo")
                        .WithMany()
                        .HasForeignKey("CriadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.Usuario", "UsuarioModificacaoInfo")
                        .WithMany()
                        .HasForeignKey("ModificadoPeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "PortoIataDestinoInfo")
                        .WithMany()
                        .HasForeignKey("PortoIataDestinoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CtaCargo.CctImportacao.Domain.Entities.PortoIata", "PortoIataOrigemInfo")
                        .WithMany()
                        .HasForeignKey("PortoIataOrigemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
